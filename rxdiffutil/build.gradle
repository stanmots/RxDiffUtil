/*
 * MIT License
 *
 * Copyright (c) 2017 Stan Mots (Storix)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'

ext {

    // Try to read properties defined in local.properties
    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').exists()) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    }

    bintrayUser = System.getenv("BINTRAY_USER") ?: properties.getProperty("bintrayUser")
    bintrayApiKey = System.getenv("BINTRAY_KEY") ?: properties.getProperty("bintrayKey")

    sonatypeUsername = System.getenv("SONATYPE_USER") ?: properties.getProperty("sonatypeUser")
    sonatypePassword = System.getenv("SONATYPE_PASSWORD") ?: properties.getProperty("sonatypePassword")
    gpgPassphrase = System.getenv("GPG_PASSPHRASE") ?: properties.getProperty("gpgPassphrase")

    bintrayRepo = 'maven'
    bintrayName = 'rxdiffutil'

    publishedGroupId = 'io.github.storix'
    libraryName = 'rxdiffutil'
    artifact = 'rxdiffutil'

    libraryDescription = 'A lightweight Rx wrapper around DiffUtil with Activity lifecycle support'

    siteUrl = 'https://github.com/storix/RxDiffUtil'
    gitUrl = 'https://github.com/storix/RxDiffUtil.git'
    issueUrl = 'https://github.com/storix/RxDiffUtil/issues'
    notesFile = 'README.md'

    // The project version
    project.version = '0.2.1'
    libraryVersion =  project.version
    libraryVcsTag = libraryVersion

    developerId = 'Storix'
    developerName = 'Stan Mots'
    developerEmail = 'stuffokator@gmail.com'

    licenseName = 'MIT License'
    licenseUrl = 'http://www.opensource.org/licenses/mit-license.php'
    allLicenses = ["MIT License"]

    allLabels = ['Android', 'DiffUtil', 'RxJava']
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "0.1.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        consumerProguardFiles 'proguard-rules.pro'

        // see https://code.google.com/p/android/issues/detail?id=223575
        return void
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }

            testLogging {
                events "failed"
                exceptionFormat "full"
            }
        }
    }
}

jacoco {
    toolVersion = "0.7.9"
}

jacocoAndroidUnitTestReport {
    excludes += ['**/internal/Preconditions.*',
                 '**/internal/Constants.*']
}

// Fix javadoc task
// see https://stackoverflow.com/questions/34571371/android-studio-javadoc-cannot-find-symbol
afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:$support_lib_version"
    compile "com.android.support:recyclerview-v7:$support_lib_version"

    // RxJava
    compile 'io.reactivex.rxjava2:rxjava:2.0.6'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    testCompile 'junit:junit:4.12'
    testCompile 'net.trajano.commons:commons-testing:1.0.1'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:2.7.10'
    testCompile "org.robolectric:robolectric:3.2.2"

    // This dependency is needed to fix Robolectric bug
    // See https://github.com/robolectric/robolectric/issues/1932
    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

apply from: '../scripts/generatePom.gradle'
apply from: '../scripts/configureBintray.gradle'
